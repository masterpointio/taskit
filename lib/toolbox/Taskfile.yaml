# See more information in docs/toolbox.md
version: "3"
vars:
  VERSION:
    sh: git rev-parse --short HEAD
  TOOLBOX_NAME: '{{.TOOLBOX_NAME | default "toolbox"}}'
  LATEST_IMAGE_TAG: "{{.TOOLBOX_NAME}}:latest"
  VERSION_IMAGE_TAG: "{{.TOOLBOX_NAME}}:{{.VERSION}}"
  REGISTRY_LATEST_URL: "{{.REGISTRY_URL_BASE}}/{{.LATEST_IMAGE_TAG}}"
  REGISTRY_VERSION_URL: "{{.REGISTRY_URL_BASE}}/{{.VERSION_IMAGE_TAG}}"
  CONTAINERFILE_PATH: '{{.CONTAINERFILE_PATH | default "./Containerfile"}}'
  AWS_REGION: '{{.AWS_REGION | default "us-east-1"}}'

tasks:
  auth:
    desc: Authenticate to AWS ECR
    internal: true
    requires:
      vars:
        - AWS_REGION
        - REGISTRY_URL_BASE
    cmds:
      - aws ecr get-login-password --region {{.AWS_REGION}} | docker login --username AWS --password-stdin {{.REGISTRY_URL_BASE}}

  install:
    desc: Install wrapper script from geodesic container
    internal: true
    requires:
      vars:
        - TOOLBOX_NAME
    cmds:
      - docker run --rm {{.REGISTRY_LATEST_URL}} init | bash -s {{.TOOLBOX_NAME}}

  run:build:
    desc: Build, install, and run the toolbox image
    cmds:
      - task: build
      - task: run

  run:pull:
    desc: Pull, install, and run the toolbox image
    cmds:
      - task: pull
      - task: run

  clean:
    desc: Cleans all toolbox images off of the local machine
    prompt: Are you sure you want to clean all {{.TOOLBOX_NAME}} toolbox images off of the local machine?
    cmds:
      - docker rmi $(docker images --format '{{ "{{" }}.Repository{{ "}}" }}:{{ "{{" }}.Tag{{ "}}" }}' | grep '{{.TOOLBOX_NAME}}')

  build:
    desc: Build and tag our toolbox image
    requires:
      vars:
        - TOOLBOX_NAME
        - CONTAINERFILE_PATH
    cmds:
      - |
        docker build --tag {{.LATEST_IMAGE_TAG}} \
                     --tag {{.VERSION_IMAGE_TAG}} \
                     --tag {{.REGISTRY_LATEST_URL}} \
                     --tag {{.REGISTRY_VERSION_URL}} \
                     -f {{.CONTAINERFILE_PATH}} .
      - echo "Done building and tagging toolbox ðŸ’¯ Tagged as {{.VERSION_IMAGE_TAG}} + {{.LATEST_IMAGE_TAG}}"

  run:
    desc: Run our toolbox image while also mounting your $HOME folder to `/localhost` in the container
    deps:
      - install
    cmds:
      - "{{.TOOLBOX_NAME}}"

  pull:
    desc: Pull our toolbox image from registry
    deps:
      - auth
    requires:
      vars:
        - REGISTRY_URL_BASE
        - REGISTRY_LATEST_URL
    cmds:
      - docker pull {{.REGISTRY_LATEST_URL}}
      - docker tag {{.REGISTRY_LATEST_URL}} {{.LATEST_IMAGE_TAG}}

  publish:
    desc: Publish our toolbox image to the registry
    deps:
      - auth
    requires:
      vars:
        - REGISTRY_URL_BASE
        - REGISTRY_LATEST_URL
    cmds:
      - docker push {{.REGISTRY_LATEST_URL}}
      - docker push {{.REGISTRY_VERSION_URL}}
